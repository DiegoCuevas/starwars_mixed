# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: diego03
service: starwars-weather-api

frameworkVersion: '4'

plugins:
  - serverless-offline

provider:

  name: aws
  runtime: nodejs20.x
  region: us-east-1
  timeout: 10
  memorySize: 256
  environment:
    DYNAMODB_TABLE: ${env:TABLE}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  getFusionados:
    handler: src/handlers/getFusionados.handler
    events:
      - http:
          path: /fusionados
          method: get
  almacenar:
    handler: src/handlers/almacenar.handler
    events:
      - http:
          path: /almacenar
          method: post
  getHistorial:
    handler: src/handlers/getHistorial.handler
    events:
      - http:
          path: /historial
          method: get

resources:
  Resources:
    FusionadosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST